<!-- 
	This is intended to be a simple build file, created a suggestion for the necessary steps need to utilize the FlexUnit4 Ant task.
	For the most detail when running this build, call "ant -v clean package".  The build uses a simple lifecycle of: 
	
	init->compile->test->package
	
	The end goal is to produce a zip of a website you could deploy for your application.  This build is not intended to be an example
	for how to use Ant or the Flex SD Ant tasks.  This is just one possible way to utilize the FlexUnit4 Ant task. 
 -->
<project name="PlaybookSandbox" basedir="." default="package">
	<!-- setup a prefix for all environment variables -->
	<property environment="env" />
	<!-- Version info -->
	<property file="${basedir}/version.properties"/>
	<!-- /Applications/Adobe Flash Builder 4.5/sdks/4.5.0 -->
	<!-- Setup paths for build -->
	<property name="FLEX_HOME" value="/Applications/Adobe Flash Builder 4.5/sdks/4.5.0" />
	<property name="TABLET_SDK" value="/Library/RIM/blackberry-tablet-sdk-1.1.0/frameworks" />
	<property name="APP_NAME" value="PlaybookSandbox" />
	<!-- property name="ant.project.name" value="PlaybookSandbox" / -->

	<property name="main.src.loc" location="${basedir}/src/" />
	<property name="test.src.loc" location="${basedir}/tests/" />
	<property name="lib.loc" location="${basedir}/libs" />
	<property name="tabletsdk.loc" location="${TABLET_SDK}/libs" />
	<property name="airsdk.loc" location="${FLEX_HOME}/frameworks/libs/air" />
	<property name="output.loc" location="${basedir}/target" />
	<property name="testrunner.loc" location="${output.loc}/testrunner" />
	<property name="report.loc" location="${output.loc}/report" />
	<property name="deploy.loc" location="${output.loc}/deploy" />

	<!-- Setup Flex and FlexUnit ant tasks -->
	<!-- You can set this directly so mxmlc will work correctly, or set FLEX_HOME as an environment variable and use as below -->
	<!-- property name="FLEX_HOME" location="${env.FLEX_HOME}" /-->
	
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<taskdef resource="flexUnitTasks.tasks">
	   <classpath>
	      <fileset dir="${lib.loc}">
	         <include name="flexUnitTasks*.jar" />
	      </fileset>
	   </classpath>
	</taskdef>
	
	<!-- Add JSCH jar to the classpath-->
	<classloader>
	   <classpath>
	      <fileset dir="${lib.loc}" includes="jsch*.jar"/>
	   </classpath>
	</classloader>
	
	<macrodef name="set.timestamp">
		<sequential>
	    	<tstamp>
	      		<format property="current.time" pattern="yyyyMMddhhmm"/>
	    	</tstamp>
	  	</sequential>
	</macrodef>
	
	<target name="clean">
		<!-- Remove all directories created during the build process -->
		<delete dir="${output.loc}" />
	</target>

	<target name="init">
		<!-- Create directories needed for the build process -->
		<mkdir dir="${output.loc}" />
		<mkdir dir="${testrunner.loc}" />
		<mkdir dir="${report.loc}" />
		<mkdir dir="${deploy.loc}" />
	</target>

	<target name="compile" depends="init">
		<!-- Compile Main.mxml as a SWF -->
		<mxmlc file="${main.src.loc}/${APP_NAME}.as" output="${testrunner.loc}/${APP_NAME}.swf" static-link-runtime-shared-libraries="true">
			<library-path dir="${lib.loc}" append="true">
				<include name="*.swc" />
			</library-path>
			<library-path dir="${tabletsdk.loc}/qnx-screen" append="true">
				<include name="*.swc" />
			</library-path>
			<library-path dir="${tabletsdk.loc}/blackberry" append="true">
				<include name="*.swc" />
			</library-path>
			<library-path dir="${tabletsdk.loc}/air" append="true">
				<include name="*.swc" />
			</library-path>
			<library-path dir="${airsdk.loc}" append="true">
				<include name="*.swc" />
			</library-path>
			<compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
			<compiler.headless-server>true</compiler.headless-server>
		</mxmlc>
	</target>

	<target name="test" depends="compile">
		<!-- Execute FlexUnit tests and publish reports -->
		<flexunit 
		    workingDir="${testrunner.loc}"
		    toDir="${report.loc}" 
			haltonfailure="false" 
			verbose="true" 
			localTrusted="true"
			failureproperty="flexunit.failed">
	      <source dir="${main.src.loc}" />
	      <testSource dir="${test.src.loc}">
	         <include name="**/*Test.as" />
	      </testSource>
	      <library dir="${lib.loc}" />
			<library dir="${tabletsdk.loc}/qnx-screen">
				<include name="*.swc" />
			</library>
			<library dir="${tabletsdk.loc}/blackberry">
				<include name="*.swc" />
			</library>
			<library dir="${tabletsdk.loc}/air">
				<include name="*.swc" />				
			</library>
			<library dir="${airsdk.loc}">
				<include name="*.swc" />
			</library>
	   </flexunit>

		<!-- Generate readable JUnit-style reports -->
		<junitreport todir="${report.loc}">
			<fileset dir="${report.loc}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${report.loc}/html" />
		</junitreport>
		<fail message="Tests failed!" if="flexunit.failed" />
	</target>
	
	<target name="package" depends="test">
		<!-- Assemble final bar file -->
		<echo message="coping files to:${basedir} from:${main.src.loc}"/>
		<copy file="${testrunner.loc}/${APP_NAME}.swf" todir="${basedir}" />
		<delete dir="${testrunner.loc}" />
		<copy file="${main.src.loc}/${APP_NAME}-app.xml" todir="${basedir}" />
		<copy file="${main.src.loc}/blackberry-tablet.xml" todir="${basedir}" />
		<copy file="${main.src.loc}/blackberry-tablet-icon.png" todir="${basedir}" />
		<copy file="${main.src.loc}/winter-wonderland-1024x600.jpg" todir="${basedir}" />

		<echo message="deploy.loc is:${deploy.loc} and basedir is:${basedir} and main.src.loc is:${main.src.loc}"/>
		<!-- create bar file and sign-->
		<exec executable="/Applications/Adobe Flash Builder 4.5/sdks/blackberry-tablet-sdk-1.1.0/bin/blackberry-airpackager">
		    <arg value="-package"/>
		    <arg value="${deploy.loc}/${APP_NAME}.bar"/>
		    <arg value="${basedir}/${APP_NAME}-app.xml"/>
			<arg value="${basedir}/blackberry-tablet.xml"/>
		    <arg value="${basedir}/${APP_NAME}.swf"/>
			<arg value="${basedir}/blackberry-tablet-icon.png"/>
			<arg value="${basedir}/winter-wonderland-1024x600.jpg"/>
		</exec>
		<echo message="deploy.loc is:${deploy.loc} and basedir is:${basedir} and main.src.loc is:${main.src.loc}"/>

		<exec executable="/Applications/Adobe Flash Builder 4.5/sdks/blackberry-tablet-sdk-1.1.0/bin/blackberry-signer">
			<arg value="-verbose"/>
			<arg value="-cskpass"/>
			<arg value="${env.BLACKBERRY_SIGNING_PASSWORD}"/>
			<arg value="-keystore"/>
			<arg value="/Applications/Adobe Flash Builder 4.5/sdks/DeveloperCertificate.p12"/>
			<arg value="-storepass"/>
			<arg value="${env.BLACKBERRY_SIGNING_PASSWORD}"/>
			<arg value="${basedir}/${APP_NAME}.bar"/>
			<arg value="RDK"/>
		</exec>

		<exec executable="/Applications/Adobe Flash Builder 4.5/sdks/blackberry-tablet-sdk-1.1.0/bin/blackberry-signer">
			<arg value="-verbose"/>
			<arg value="-keystore"/>
			<arg value="/Applications/Adobe Flash Builder 4.5/sdks/DeveloperCertificate.p12"/>
			<arg value="-storepass"/>
			<arg value="${env.BLACKBERRY_SIGNING_PASSWORD}"/>
			<arg value="${basedir}/${APP_NAME}.bar"/>
			<arg value="author"/>
		</exec>
		
		<delete file="${basedir}/${APP_NAME}.swf" />
		<delete file="${basedir}/${APP_NAME}-app.xml" />
		<delete file="${basedir}/blackberry-tablet.xml" />
		<delete file="${basedir}/blackberry-tablet-icon.png" />
		<delete file="${basedir}/winter-wonderland-1024x600.jpg" />
	</target>
	
	<target name="deploy">
		<set.timestamp/>
		<sshexec host="assets.xtremelabs.com" 
			username="xtreme" 
			passphrase="${env.ANT_SCP_PASSWORD}" 
			trust="true" 
		    keyfile="/Users/KennethYip/.ssh/id_rsa" 
			failonerror="false" 
		    command="mkdir -p /home/xtreme/mobile_assets/${APP_NAME}/${current.time}"/>
		<scp file="${deploy.loc}/${ant.project.name}.bar" 
			todir="xtreme:${env.ANT_SCP_PASSWORD}@assets.xtremelabs.com:/home/xtreme/mobile_assets/${APP_NAME}/${current.time}/" 
			verbose="true" 
			trust="yes"/>
		<sshexec host="assets.xtremelabs.com" 
			username="xtreme" 
			passphrase="${env.ANT_SCP_PASSWORD}" 
			trust="true" 
			keyfile="/Users/KennethYip/.ssh/id_rsa" 
			failonerror="false" 
			command="cd /home/xtreme/mobile_assets/${APP_NAME}/; chmod -R 775 ${current.time}/${APP_NAME}.bar"/>
		<echo message="http://assets.xtremelabs.com/${APP_NAME}/${current.time}/${APP_NAME}.bar"/>
	</target>
</project>